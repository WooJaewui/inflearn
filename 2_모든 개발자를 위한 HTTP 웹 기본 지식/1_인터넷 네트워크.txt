
 인터넷 네트워크.



 # IP 인터넷 프로토콜.

IP 인터넷 프로토콜 역할.
지정한 IP 주소( IP Address )에 데이터 전달.
패킷( Packet )이라는 통신 단위로 데이터 전달.

IP 패킷 정보.
출발지 IP, 목적지 IP, 전송 데이터, ... 등.
상황에 따라 같은 IP여도 다른 노드를 통해서 전달될 수 있다.

IP 프로토콜의 한계.
비연결성.
	- 패킷을 받을 대상이 없거나 서비스 불능 상태여도 패킷 전송.
비신뢰성.
	- 중간에 패킷이 사라지면 ?
	- 패킷이 순서대로 안오면 ? ( 1500byte 이상이면 데이터를 끊어서 보낸다 )
프로그램 구분.
	- 같은 IP를 사용하는 서버에서 통신하는 애플리케이션이 둘 이상이면 ?



 # TCP, UDP.

인터넷 프로토콜 스택의 4계층.
애플리케이션 계층 - HTTP, FTP.
전송 계층 - TCP, UDP. ( OS )
인터넷 계층 - IP. ( OS )
네트워크 인터페이스 계층 - LAN Driver, LAN 장비.

프로토콜 계층 순서.
1. 프로그램이 Hello, world! 메시지 생성. ( 애플리케이션 계층 )
2. SOCKET 라이브러리를 통해 전달. ( 애플리케이션 계층 )
3. TCP 정보 생성, 메시지 데이터 포함. ( 전송 계층 )
4. IP 패킷 생성, TCP 데이터 포함. ( 인터넷 계층 )
5. Ethernetframe을 포함. ( 네트워크 인터페이스 계층 )

IP 패킷 정보.
출발지 IP, 목적지 IP, 전송 데이터, ... 기타.

TCP/IP 패킷 정보.
IP 패킷 정보.
출발지 PORT, 목적지 PORT, 전송 제어, 순서, 검증 정보, ... 기타.

TCP 특징.
전송 제어 프로토콜 Transmission Control Protocol.
신뢰할 수 있는 프로토콜.
현재는 대부분 TCP 사용.
1. 연결지향 - TCP 3 way handshake ( 가상 연결 )
2. 데이터 전달 보증.
3. 순서 보장.

TCP 3 way handshake.
1. syn.
	● 접속 요청.
	● connect, 연결 과정.
2. SYN+ACK.
	● 요청 수락.
3. ACK.
	● ACK와 함께 데이터 전송 가능.
4. 데이터 전송.
	● 3번에서 함께 수행되어 생략될 수 있다.

데이터 전달 보증.
클라이언트가 데이터를 전송하면 서버에서 데이터를 잘 받았다는 데이터를 보내줌.

순서 보장.
서버에서 TCP 정보를 통해 순서를 확인하고 잘못되어 있으면 클라이언트에게 재전송을 요구한다.

UDP 특징.
사용자 데이터그램 프로토콜 User Datagram Protocol.
데이터 전달 및 순서가 보장되지 않지만, 단순하고 빠름.
IP와 거의 같다. ( PORT와 체크섬 정도만 추가 )
애플리케이션에서 추가 작업 필요.



 # PORT.

PORT.
같은 IP 내에서 프로세스를 구분한다.
0 ~ 65535 할당 가능.
0 ~ 1023 : 잘 알려진 포트, 사용하지 않느 ㄴ것이 좋음.
	● FTP : 20, 21.
	● TELNET : 23.
	● HTTP : 80.
	● HTTPS : 443.



 # DNS.

DNS 필요 이유.
IP는 기억하기 어렵다.
IP는 변경될 수 있다.

DNS 도메인 네임 시스템 Domain Name System.
도메인 관리 서버를 통해 IP 주소를 도메인 이름과 매핑하여 사용.

















